name: Run Load Test on Azure ACI

on:
  push:
    branches:
      - test # Trigger when pushing to 'test' branch

env:
  RESOURCE_GROUP: demoresourcegrp
  ACR_NAME: chausag # Change this to your Azure Container Registry name
  ACI_GROUP: locust-loadtest

jobs:
  deploy-load-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.2.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Verify Docker Compose Installation
        run: docker-compose --version

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to Azure Container Registry
        run: |
          az acr login --name $ACR_NAME

      - name: Build and Push Docker Images with Docker Compose
        run: |
          docker-compose build
          docker-compose push

      - name: Deploy with Scaling
        run: |
          # Deploy using Docker Compose with scaling
          docker-compose up --scale boomer=2 -d

      # - name: Deploy to Azure
      #   run: |

      #     # Deploy using the Compose file (now referencing ACR images)
      #     az container create \
      #       --resource-group ${{ env.RESOURCE_GROUP }} \
      #       --name ${{ env.APP_NAME }} \
      #       --file docker-compose.yml \
      #       --registry-login-server ${{ env.ACR_NAME }}.azurecr.io \
      #       --registry-username ${{ secrets.ACR_USERNAME }} \
      #       --registry-password ${{ secrets.ACR_PASSWORD }}

      # - name: Deploy Locust Master
      #   run: |
      #     az container create --resource-group $RESOURCE_GROUP --name $ACI_GROUP \
      #       --image $ACR_NAME.azurecr.io/locust-masterr:latest \
      #       --cpu 2 --memory 4 \
      #       --registry-login-server $ACR_NAME.azurecr.io \
      #       --registry-username ${{ secrets.ACR_USERNAME }} \
      #       --registry-password ${{ secrets.ACR_PASSWORD }} \
      #       --os-type Linux \
      #       --dns-name-label locust-master-${{ github.run_id }} \
      #       --ports 8089 \
      #       --secure-environment-variables EXPECT_WORKERS=1 \
      #       --command-line "locust -f ./locustfile.py --master --headless --expect-workers 1 --users 1 --run-time 360s --spawn-rate .1"

      # - name: Deploy Locust Worker
      #   run: |
      #     az container create --resource-group $RESOURCE_GROUP --name $ACI_NAME \
      #       --image $ACR_NAME.azurecr.io/$IMAGE_NAME:latest \
      #       --cpu 1 --memory 1 \
      #       --registry-login-server $ACR_NAME.azurecr.io \
      #       --registry-username ${{ secrets.ACR_USERNAME }} \
      #       --registry-password ${{ secrets.ACR_PASSWORD }} \
      #       --os-type Linux \
      #       --ports 80
      #       # --secure-environment-variables LOCUST_MASTER_HOST=http://locust-master-${{ github.run_id }}:8089

      - name: Stream Logs from Locust Master
        run: |
          az container logs --resource-group $RESOURCE_GROUP --name $ACI_GROUP

      - name: Delete ACI After Test
        if: always()
        run: |
          az container delete --resource-group $RESOURCE_GROUP --name $ACI_GROUP --yes
          az container delete --resource-group $RESOURCE_GROUP --name $ACI_GROUP-workers --yes
